cabal-version: 3.0
-- This Cabal file has been automatically generated from a .cabal.in template
-- file using the `autogen` script from the project root directory.
-- Do not edit this file.
name: funhack
version: 0.1.0.0
synopsis: A fun roguelike game written in a functional language
description:
    Funhack is a fun programming experimentation â€“ a roguelike game written in Haskell.
    .
    It is a toy program. The game is not (and will not) be playable. As said, it is an experimentation for personal testing.
homepage: https:
license: GPL-3.0-only
license-file: LICENSE
author: Aura Kelloniemi
maintainer: kaura.dev@sange.fi
extra-source-files:
    AUTHORS.md
    CHANGELOG.md
    README.md
    .hlint.yaml
tested-with: GHC == { 9.6.2, 9.8.1 }
source-repository head
    type: git
    location: https:
flag Werror
    description: Enable -Werror for fixing all warnings
    default: False
    manual: True
flag Weverything
    description: Enable almost every possible warning
    default: False
    manual: True
common options
    default-extensions:
        BlockArguments,
        DataKinds,
        DeriveAnyClass,
        DeriveGeneric,
        DerivingStrategies,
        DuplicateRecordFields,
        LambdaCase,
        MultiWayIf,
        NoFieldSelectors,
        NoStarIsType,
        OverloadedRecordDot,
        OverloadedStrings,
        QuasiQuotes,
        StrictData,
        TypeFamilies
    default-language: GHC2021
    ghc-options:
        -fshow-warning-groups
        -fwrite-ide-info
    if flag(Werror)
        ghc-options:
            -Werror
    if flag(Weverything)
        ghc-options:
            -Weverything
            -Wno-all-missed-specialisations
            -Wno-implicit-prelude
            -Wno-missed-specialisations
            -Wno-missing-import-lists
            -Wno-missing-kind-signatures
            -Wno-missing-role-annotations
            -Wno-missing-safe-haskell-mode
            -Wno-monomorphism-restriction
            -Wno-safe
            -Wno-unsafe
            -Wno-unticked-promoted-constructors
    else
        ghc-options: -Wall -Wcompat
common dep-base
    build-depends: base ^>= { 4.18, 4.19 }
common dep-bytestring
    build-depends: bytestring >=0.11.4 && <0.13
common dep-effectful
    build-depends: effectful-core ^>={ 2.2.2, 2.3 }
common dep-hashable
    build-depends: hashable ^>=1.4.1
common dep-pqueue
    build-depends: pqueue ^>=1.5.0
common dep-text
    build-depends: text >=2.0 && <2.2
common dep-unordered-containers
    build-depends: unordered-containers ^>= 0.2.19.1
common dep-random
    build-depends: random ^>= 1.2.1.1
common dep-vector
    build-depends: vector ^>=0.13
common dep-funhack
    build-depends:
        funhack
library
    import:
        options,
        dep-base,
        dep-effectful,
        dep-hashable,
        dep-pqueue,
        dep-random,
        dep-text,
        dep-unordered-containers,
        dep-vector
    exposed-modules:
        FunHack.DungeonGenerator,
        FunHack.Geometry,
        FunHack.PathFinding,
        FunHack.Random,
        FunHack.WorldMap
    other-modules:
    hs-source-dirs: lib
executable funhack
    import:
        options,
        dep-funhack,
        dep-base,
        dep-effectful,
        dep-text
    hs-source-dirs: src
    main-is: Main.hs
test-suite funhack-test
    import:
        options,
        dep-base
    type: exitcode-stdio-1.0
    hs-source-dirs: test
    main-is: Main.hs
